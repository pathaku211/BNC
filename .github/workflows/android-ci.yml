name: Android CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Commit SHA for the release'
        required: true

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Clean project
        run: ./gradlew clean

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: BNC
          path: app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error
          retention-days: 30
          compression-level: 6
          overwrite: true

      - name: Get Existing Release
        id: get_release
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
        run: |
          response=$(curl -X GET \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/v1.0)

          if [[ $(echo "$response" | jq -r '.id') != null ]]; then
            echo "::set-output name=release_id::$(echo "$response" | jq -r '.id')"
            echo "::set-output name=upload_url::$(echo "$response" | jq -r '.upload_url')"
          fi

        env:
          GITHUB_TOKEN: ${{ secrets.BNC_TOKEN }}

      - name: Create or Update Release
        id: create_or_update_release
        if: steps.get_release.outputs.release_id == null
        run: |
          response=$(curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${GITHUB_REPOSITORY}/releases \
            -d '{
              "tag_name": "v1.0",
              "name": "BNC v1.0",
              "body": "Release for BNC Application\n- Latest Debug APK for last commit.",
              "draft": false,
              "prerelease": false
            }')

          echo "::set-output name=release_id::$(echo "$response" | jq -r '.id')"
          echo "::set-output name=upload_url::$(echo "$response" | jq -r '.upload_url')"

        env:
          GITHUB_TOKEN: ${{ secrets.BNC_TOKEN }}

      - name: Update Release
        if: steps.get_release.outputs.release_id != null
        id: update_release
        run: |
          curl -X PATCH \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/${{ steps.get_release.outputs.release_id }} \
            -d '{
              "tag_name": "v1.0",
              "name": "BNC v1.0",
              "body": "Release for BNC Application\n- Latest Debug APK for last commit.",
              "draft": false,
              "prerelease": false
            }'

        env:
          GITHUB_TOKEN: ${{ secrets.BNC_TOKEN }}

      - name: Upload Release Asset
        if: success() && env.upload_url != ''
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_or_update_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/debug/app-debug.apk
          asset_name: BNC.apk
          asset_content_type: application/vnd.android.package-archive

        env:
          GITHUB_TOKEN: ${{ secrets.BNC_TOKEN }}
